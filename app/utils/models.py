from typing import List, Optional
from pydantic import BaseModel, Field

class ChatMessage(BaseModel):
    """
    Represents an individual message in a conversation, specifying the sender's role, message content.
    """
    role: str = Field(..., description="The role of the message sender ('user' or 'assistant').")
    message: str = Field(..., description="The content of the message.")

class ChatRequest(BaseModel):
    """
    Represents a multi-turn chat request containing a sequence of chat messages.
    """
    request: List[ChatMessage] = Field(..., description="A list of messages forming a multi-turn conversation.")

    class Config:
        json_schema_extra = {
            'example': {
                'request': [
                    {'role': 'user', 'message': 'ถ้าเสียบเครื่องรูดบัตรแล้วยังใช้ไม่ได้ ต้องทำยังไงต่อ'},
                ]
            }
        }


class ChatResponse(BaseModel):
    """
    Represents the response generated by the model, including optional metadata such as product references,
    images, and token usage statistics.
    """
    response: str = Field(description='The text response generated by the model.')
    source_documents: Optional[List[str]] = None
    intent: str = None